version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: cvfast-postgres
    restart: always
    environment:
      POSTGRES_DB: cvfast
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - cvfast-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./Api
      dockerfile: CVFastApi/Dockerfile
    container_name: cvfast-backend
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "5207:80"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cvfast-network

  frontend:
    build:
      context: ./Front
      dockerfile: Dockerfile
    container_name: cvfast-frontend
    restart: always
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      - cvfast-network
      
    nginx:
      image: nginx:latest
      container_name: cvfast-nginx
      restart: always
      volumes:
        - ./nginx.conf:/etc/nginx/nginx.conf
      ports:
        - "80:80"
      depends_on:
        - frontend
        - backend
      networks:
        - cvfast-network

networks:
  cvfast-network:
    driver: bridge

volumes:
  postgres_data:

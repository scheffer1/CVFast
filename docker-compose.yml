version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: cvfast-postgres
    restart: always
    environment:
      POSTGRES_DB: cvfast
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - cvfast-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./Api
      dockerfile: CVFastApi/Dockerfile
    container_name: cvfast-backend
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
    expose:
      - "80"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cvfast-network

  frontend:
    build:
      context: ./Front
      dockerfile: Dockerfile
    container_name: cvfast-frontend
    restart: "no"
    command: ["sh"]
    networks:
      - cvfast-network
    volumes:
      - frontend-dist:/export

  nginx:
    image: nginx:latest
    container_name: cvfast-nginx
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - frontend-dist:/usr/share/nginx/html:ro
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    networks:
      - cvfast-network

volumes:
  postgres_data:
  frontend-dist:

networks:
  cvfast-network:
    driver: bridge
